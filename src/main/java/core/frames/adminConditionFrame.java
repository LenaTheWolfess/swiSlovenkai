/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.frames;

import core.db.entity.Bank;
import core.db.entity.Condition;
import core.db.entity.User;
import core.db.impl.ConditionDaoImpl;
import core.db.impl.UserDaoImpl;
import core.db.ints.ConditionDao;
import core.db.ints.UserDao;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rastislav, Slovenkai
 */
public class adminConditionFrame extends javax.swing.JFrame
{

					private ConditionDao conditionDao = new ConditionDaoImpl();

					public void prepareConditionTable()
					{
										DefaultTableModel tableModel = (DefaultTableModel) adminConditionFrameConditionsTable.getModel();
										List<Condition> conditions = conditionDao.getAll();
										adminConditionFrameConditionsTable.removeAll();
										tableModel.setNumRows(conditions.size());
										int i = 0;
										for(Condition condition : conditions)
										{
															String expression = conditions.get(i).getExpression();

															tableModel.setValueAt(condition, i, 0);
															tableModel.setValueAt(expression, i, 1);
															i++;
										}
					}

					/**
					 * Creates new form podmienkaFrame
					 */
					public adminConditionFrame(User user)
					{
										initComponents();
										prepareConditionTable();
					}

					/**
					 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
					 */
					@SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents()
     {

          jScrollPane1 = new javax.swing.JScrollPane();
          adminCinditionFrameDescriptionTextArea = new javax.swing.JTextArea();
          popisLabel = new javax.swing.JLabel();
          addConditionAddButton = new javax.swing.JButton();
          jLabel1 = new javax.swing.JLabel();
          jScrollPane2 = new javax.swing.JScrollPane();
          adminConditionFrameSqlExpressionTextArea = new javax.swing.JTextArea();
          jScrollPane3 = new javax.swing.JScrollPane();
          adminConditionFrameConditionsTable = new javax.swing.JTable();
          adminConditionFrameRemoveCondition = new javax.swing.JButton();

          setTitle("Administrátor Správa Podmienok");

          adminCinditionFrameDescriptionTextArea.setColumns(20);
          adminCinditionFrameDescriptionTextArea.setRows(5);
          jScrollPane1.setViewportView(adminCinditionFrameDescriptionTextArea);

          popisLabel.setText("Popis:");

          addConditionAddButton.setText("Pridať");
          addConditionAddButton.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    addConditionAddButtonActionPerformed(evt);
               }
          });

          jLabel1.setText("Sql Výraz:");

          adminConditionFrameSqlExpressionTextArea.setColumns(20);
          adminConditionFrameSqlExpressionTextArea.setRows(5);
          jScrollPane2.setViewportView(adminConditionFrameSqlExpressionTextArea);

          adminConditionFrameConditionsTable.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][]
               {
                    {null, null},
                    {null, null},
                    {null, null},
                    {null, null}
               },
               new String []
               {
                    "Popis podmienky", "Sql Vyraz"
               }
          )
          {
               Class[] types = new Class []
               {
                    Condition.class, java.lang.String.class
               };

               public Class getColumnClass(int columnIndex)
               {
                    return types [columnIndex];
               }
          });
          jScrollPane3.setViewportView(adminConditionFrameConditionsTable);

          adminConditionFrameRemoveCondition.setText("Odstrániť");
          adminConditionFrameRemoveCondition.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    adminConditionFrameRemoveConditionActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                         .addComponent(jScrollPane2)
                         .addComponent(addConditionAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addGroup(layout.createSequentialGroup()
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel1)
                                   .addComponent(popisLabel)
                                   .addComponent(adminConditionFrameRemoveCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE))
                              .addGap(0, 0, Short.MAX_VALUE))
                         .addComponent(jScrollPane3))
                    .addContainerGap())
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(adminConditionFrameRemoveCondition)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(popisLabel)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(addConditionAddButton)
                    .addContainerGap())
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

    private void addConditionAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConditionAddButtonActionPerformed

									String description = adminCinditionFrameDescriptionTextArea.getText();
									String expression = adminConditionFrameSqlExpressionTextArea.getText();
									
									/*description || expression is null*/
									if(description == null || expression == null)
														return;
									/*description || expression is empty*/
									if(description.trim().isEmpty() || expression.trim().isEmpty())
														return;
									/*description incorect lenght*/
									if(description.length() > 100)
														return;
									
									/*everything ok*/
									Condition newCondition = new Condition();
									newCondition.setDescription(description);
									newCondition.setExpression(expression);

									conditionDao.addCondition(newCondition);
									prepareConditionTable();
    }//GEN-LAST:event_addConditionAddButtonActionPerformed

     private void adminConditionFrameRemoveConditionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_adminConditionFrameRemoveConditionActionPerformed
     {//GEN-HEADEREND:event_adminConditionFrameRemoveConditionActionPerformed
										if(adminConditionFrameConditionsTable.getSelectedRow()==-1)
															return;
										
										Condition deleteCondition = (Condition) adminConditionFrameConditionsTable.getValueAt(adminConditionFrameConditionsTable.getSelectedRow(), 0);

										if(deleteCondition == null)
															return;

										/*everything ok*/
										conditionDao.deleteCondition(deleteCondition);
										prepareConditionTable();

     }//GEN-LAST:event_adminConditionFrameRemoveConditionActionPerformed


     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton addConditionAddButton;
     private javax.swing.JTextArea adminCinditionFrameDescriptionTextArea;
     private javax.swing.JTable adminConditionFrameConditionsTable;
     private javax.swing.JButton adminConditionFrameRemoveCondition;
     private javax.swing.JTextArea adminConditionFrameSqlExpressionTextArea;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JScrollPane jScrollPane2;
     private javax.swing.JScrollPane jScrollPane3;
     private javax.swing.JLabel popisLabel;
     // End of variables declaration//GEN-END:variables
}
