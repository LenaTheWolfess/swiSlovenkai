/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core.frames;

import core.db.entity.User;
import core.db.entity.Bank;
import core.db.entity.BankCondition;
import core.db.entity.Condition;
import core.db.impl.BankConditionDaoImpl;
import core.db.impl.BankDaoImpl;
import core.db.impl.ConditionDaoImpl;
import core.db.ints.BankConditionDao;
import core.db.ints.BankDao;
import core.db.ints.ConditionDao;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Rastislav, Martin
 */
public class bankFrame extends javax.swing.JFrame
{

					private User userF;
					private ConditionDao conditionDao = new ConditionDaoImpl();
					private BankConditionDao bankConditionDao = new BankConditionDaoImpl();
					private BankDao bankDao = new BankDaoImpl();

					public void prepareLabels()
					{
										Long idB = userF.getIdB();
										Bank bank = bankDao.getById(idB);
										if(bank==null)
															return;
										
										bankFrameInterestRateLabel.setText("Základná úroková sadzba : "+bank.getPrimeInterestRate());
										bankFrameIdBankLabel.setText("Id Banky : "+bank.getId());
					}
					
					public void prepareBankConditionTable()
					{

										DefaultTableModel tableModel = (DefaultTableModel) bankFrameBankConditionsTable.getModel();
										List<Condition> conditions = conditionDao.getAll();
										bankFrameBankConditionsTable.removeAll();

										List<BankCondition> bankConditions = bankConditionDao.getByBankId(userF.getIdB());

										tableModel.setNumRows(bankConditions.size());
										for(int i = 0; i < bankConditions.size(); i++)
										{
															BankCondition bc = bankConditions.get(i);
															Long id = bc.getId();

															String description = "";
															for(Condition con : conditions)
															{
																				if(con.getId().equals(bc.getIdC()))
																				{
																									description = description + con.getDescription();
																									break;
																				}
															}

															boolean valued = (bc.getValue() != null);

															if(valued)
															{
																				/*mark*/
																				int mark = bc.getMark().intValue();
																				switch(mark)
																				{
																									case 0:
																														description = description + " = ";
																														break;
																									case 1:
																														description = description + " >= ";
																														break;
																									case 2:
																														description = description + " > ";
																														break;
																									case -1:
																														description = description + " <= ";
																														break;
																									case -2:
																														description = description + " < ";
																														break;
																									default:
																														break;
																				}
																				/*value*/

																				description = description + bc.getValue();

															}
															description = description + " ( " + (bc.getChangeInterestRate()) + "% )";

															tableModel.setValueAt(id, i, 0);
															tableModel.setValueAt(description, i, 1);
										}
					}

					/**
					 * Creates new form bankFrame
					 */
					public bankFrame(User user)
					{
										userF = user;
										initComponents();
										prepareBankConditionTable();
										prepareLabels();
					}

					/**
					 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
					 */
					@SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents()
     {

          jButton1 = new javax.swing.JButton();
          bankFrameAddBankConditionFrameButton = new javax.swing.JButton();
          jScrollPane3 = new javax.swing.JScrollPane();
          bankFrameBankConditionsTable = new javax.swing.JTable();
          bankFrameDeleteSelectedBankConditionButton = new javax.swing.JButton();
          bankaZmenUrokovuSadzbuButton = new javax.swing.JButton();
          bankFrameInterestRateLabel = new javax.swing.JLabel();
          bankFrameUpdateSelectedBankConditionFrameButton = new javax.swing.JButton();
          bankFrameIdBankLabel = new javax.swing.JLabel();
          bankFrameHľadanieKlientovFrameButton = new javax.swing.JButton();

          jButton1.setText("jButton1");

          bankFrameAddBankConditionFrameButton.setText("Pridať podmienku");
          bankFrameAddBankConditionFrameButton.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    bankFrameAddBankConditionFrameButtonActionPerformed(evt);
               }
          });

          bankFrameBankConditionsTable.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][]
               {
                    {null, null},
                    {null, null},
                    {null, null},
                    {null, null}
               },
               new String []
               {
                    "Id", "Description"
               }
          )
          {
               Class[] types = new Class []
               {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class
               };

               public Class getColumnClass(int columnIndex)
               {
                    return types [columnIndex];
               }
          });
          jScrollPane3.setViewportView(bankFrameBankConditionsTable);

          bankFrameDeleteSelectedBankConditionButton.setText("Odobrať označenú podmienku");
          bankFrameDeleteSelectedBankConditionButton.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    bankFrameDeleteSelectedBankConditionButtonActionPerformed(evt);
               }
          });

          bankaZmenUrokovuSadzbuButton.setText("Zmeniť základnú úrokovú sadzbu");
          bankaZmenUrokovuSadzbuButton.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    bankaZmenUrokovuSadzbuButtonActionPerformed(evt);
               }
          });

          bankFrameInterestRateLabel.setText("Základná úroková sadzba : ");

          bankFrameUpdateSelectedBankConditionFrameButton.setText("Upraviť označenú podmienku");
          bankFrameUpdateSelectedBankConditionFrameButton.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    bankFrameUpdateSelectedBankConditionFrameButtonActionPerformed(evt);
               }
          });

          bankFrameIdBankLabel.setText("Id Banky : ");

          bankFrameHľadanieKlientovFrameButton.setText("Hľadanie Klientov");
          bankFrameHľadanieKlientovFrameButton.addActionListener(new java.awt.event.ActionListener()
          {
               public void actionPerformed(java.awt.event.ActionEvent evt)
               {
                    bankFrameHľadanieKlientovFrameButtonActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                         .addComponent(bankFrameDeleteSelectedBankConditionButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addGroup(layout.createSequentialGroup()
                              .addComponent(bankFrameInterestRateLabel)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(bankFrameIdBankLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(10, 10, 10))
                         .addComponent(bankFrameAddBankConditionFrameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addGroup(layout.createSequentialGroup()
                              .addComponent(bankaZmenUrokovuSadzbuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(bankFrameHľadanieKlientovFrameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                         .addComponent(bankFrameUpdateSelectedBankConditionFrameButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(bankFrameInterestRateLabel)
                         .addComponent(bankFrameIdBankLabel))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(bankaZmenUrokovuSadzbuButton)
                         .addComponent(bankFrameHľadanieKlientovFrameButton))
                    .addGap(18, 18, 18)
                    .addComponent(bankFrameUpdateSelectedBankConditionFrameButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bankFrameAddBankConditionFrameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(13, 13, 13)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                    .addComponent(bankFrameDeleteSelectedBankConditionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

    private void bankFrameAddBankConditionFrameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankFrameAddBankConditionFrameButtonActionPerformed

									bankConditionsFrame abFrame = new bankConditionsFrame(userF.getIdB(), this);
									abFrame.setVisible(true);
    }//GEN-LAST:event_bankFrameAddBankConditionFrameButtonActionPerformed

     private void bankFrameDeleteSelectedBankConditionButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bankFrameDeleteSelectedBankConditionButtonActionPerformed
     {//GEN-HEADEREND:event_bankFrameDeleteSelectedBankConditionButtonActionPerformed
										/*no selection*/
										if(bankFrameBankConditionsTable.getSelectedRow() == -1)
															return;
										
										Long id = (Long)bankFrameBankConditionsTable.getValueAt(bankFrameBankConditionsTable.getSelectedRow(), 0);
										
										/*id is null*/
										if(id==null)
															return;
										
										/*getting bankCondition to remove*/
										BankCondition deleteBankCondition = bankConditionDao.getById(id);
										if(deleteBankCondition==null)
															return;
										
										/*everything ok*/
										bankConditionDao.deleteBankCondition(deleteBankCondition);
										prepareBankConditionTable();

     }//GEN-LAST:event_bankFrameDeleteSelectedBankConditionButtonActionPerformed

     private void bankaZmenUrokovuSadzbuButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bankaZmenUrokovuSadzbuButtonActionPerformed
     {//GEN-HEADEREND:event_bankaZmenUrokovuSadzbuButtonActionPerformed
										bankSadzbaFrame sFrame = new bankSadzbaFrame(userF.getIdB(), this);
										sFrame.setVisible(true);
     }//GEN-LAST:event_bankaZmenUrokovuSadzbuButtonActionPerformed

     private void bankFrameUpdateSelectedBankConditionFrameButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bankFrameUpdateSelectedBankConditionFrameButtonActionPerformed
     {//GEN-HEADEREND:event_bankFrameUpdateSelectedBankConditionFrameButtonActionPerformed
          if(bankFrameBankConditionsTable.getSelectedRow() == -1)
															return;
										
										Long id = (Long)bankFrameBankConditionsTable.getValueAt(bankFrameBankConditionsTable.getSelectedRow(), 0);
										
										/*id is null*/
										if(id==null)
															return;
										
										/*getting bankCondition to update*/
										BankCondition updateBankCondition = bankConditionDao.getById(id);
										if(updateBankCondition==null)
															return;
										
										bankUpdateBankConditionFrame bFrame = new bankUpdateBankConditionFrame(userF.getIdB(),this,updateBankCondition);
     }//GEN-LAST:event_bankFrameUpdateSelectedBankConditionFrameButtonActionPerformed

     private void bankFrameHľadanieKlientovFrameButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bankFrameHľadanieKlientovFrameButtonActionPerformed
     {//GEN-HEADEREND:event_bankFrameHľadanieKlientovFrameButtonActionPerformed
         if(userF==null)
														return;
						bankSearchClientsFrame bs = new bankSearchClientsFrame(userF.getIdB());
     }//GEN-LAST:event_bankFrameHľadanieKlientovFrameButtonActionPerformed

					/**
					 * @param args the command line arguments
					 */

     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton bankFrameAddBankConditionFrameButton;
     private javax.swing.JTable bankFrameBankConditionsTable;
     private javax.swing.JButton bankFrameDeleteSelectedBankConditionButton;
     private javax.swing.JButton bankFrameHľadanieKlientovFrameButton;
     private javax.swing.JLabel bankFrameIdBankLabel;
     private javax.swing.JLabel bankFrameInterestRateLabel;
     private javax.swing.JButton bankFrameUpdateSelectedBankConditionFrameButton;
     private javax.swing.JButton bankaZmenUrokovuSadzbuButton;
     private javax.swing.JButton jButton1;
     private javax.swing.JScrollPane jScrollPane3;
     // End of variables declaration//GEN-END:variables
}
